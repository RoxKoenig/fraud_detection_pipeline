---
name: MLOps Pipeline for Fraud Detection with Database Connection

on:
  schedule:
    - cron: '0 0 1 * *'  # Run on the 1st of every month
  workflow_dispatch:  # Allow manual triggering

jobs:
  pipeline:
    name: Fraud Detection MLOps Pipeline with Database Connection
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install --no-cache-dir -r requirements.txt
          pip install psycopg2

      # Step 4.2: Start Services with Docker Compose
      - name: Start Services with Docker Compose
        run: |
          docker-compose up -d
          echo "Waiting for services to be ready..."
          sleep 15

      # Step 5: Verify Database Connection
      - name: Test Database Connection
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python database.py

      # Step 6: Generate monthly data
      - name: Generate Monthly Data
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python generate_monthly_data.py --month 1 --output_path output.csv

      # Step 7: Detect data drift
      - name: Detect Data Drift
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python data_drift.py

      # Step 8: Retrain model
      - name: Retrain Model
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python retrain.py

      # Step 9: Deploy the model
      - name: Deploy Model
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python deploy_model.py

      # Step 10: Run Main Script
      - name: Run Main Pipeline Script
        env:
          DB_NAME: fraud_detection_db
          DB_USER: admin
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source .venv/bin/activate
          python main.py

      # Step 11: Notify the team
      - name: Notify Team
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: your-slack-channel-id
          text: "MLOps pipeline completed successfully with database integration!"
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}

      # Step 12: Cleanup Docker
      - name: Clean up Docker containers
        run: |
          docker-compose down

