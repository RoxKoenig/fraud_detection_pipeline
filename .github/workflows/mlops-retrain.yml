name: MLOps Pipeline for Fraud Detection with Database Connection

on:
  schedule:
    - cron: '0 0 1 * *'  # Run on the 1st of every month
  workflow_dispatch:  # Allow manual triggering

jobs:
  pipeline:
    name: Fraud Detection MLOps Pipeline with Database Connection
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Kill Conflicting Ports
      - name: Kill processes on ports 5000 and 5001
        run: |
          for port in 5000 5001; do
            pid=$(lsof -ti :$port) || true
            if [ -n "$pid" ]; then
              echo "Killing process on port $port (PID: $pid)"
              kill -9 $pid
            else
              echo "No process found running on port $port."
            fi
          done

      # Step 3: Set Up Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'

      # Step 4: Install Dependencies
      - name: Install Python dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg2

      # Step 5: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Step 6: Build and Start Services
      - name: Build and Start Docker Services
        run: |
          docker-compose up --build -d
          echo "Waiting for services to be ready..."

      # Step 7: Run Pipeline Scripts
      - name: Run Main Pipeline
        run: |
          source .venv/bin/activate
          python generate_monthly_data.py --month 1 --output_path output.csv
          python data_drift.py
          python main.py
          python retrain.py
          python deploy_model.py

      # Step 8: Clean Up Docker Containers
      - name: Clean up Docker Containers
        run: docker-compose down

