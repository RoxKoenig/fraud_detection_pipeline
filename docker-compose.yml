services:
  # PostgreSQL Service
  postgres:
    container_name: fraud_detection_db
    image: postgres:17  # Stable PostgreSQL version
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fraud_detection_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d fraud_detection_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MLflow Server Service
  mlflow:
    image: mlflow/mlflow:latest  # Use the official MLflow image from Docker Hub
    container_name: mlflow_server
    ports:
      - "5001:5001"  # Expose MLflow server on port 5001
    environment:
      BACKEND_STORE_URI: "postgresql://admin:password@fraud_detection_db:5432"
      ARTIFACT_ROOT: "/mlflow/artifacts"
    volumes:
      - mlflow_data:/mlflow/artifacts
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      mlflow server 
      --backend-store-uri postgresql://admin:password@fraud_detection_db:5432 
      --default-artifact-root /mlflow/artifacts 
      --host 0.0.0.0 
      --port 5001

  # Flask Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_mlflow_app
    ports:
      - "5000:5000"  # Flask/Gunicorn runs on port 5000
    volumes:
      - .:/app  # Mount the application files
    environment:
      - FLASK_ENV=development
      - MLFLOW_TRACKING_URI=http://mlflow_server:5001
    depends_on:
      postgres:
        condition: service_healthy
      mlflow:
        condition: service_healthy

volumes:
  postgres_data:
    name: fraud-detection_postgres_data
  mlflow_data:
    name: fraud-detection_mlflow_data

