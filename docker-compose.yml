version: '3.8'

services:
  postgres:
    container_name: fraud_detection_db
    image: postgres:17  # Use a specific version for stability
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fraud_detection_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "fraud_detection_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: "/home/rox/SynologyDrive/Uni/Backups/Python Code/fraud-detection"
      dockerfile: Dockerfile
    container_name: python_app
    ports:
      - "5000:5000"
    volumes:
      - "/home/rox/SynologyDrive/Uni/Backups/Python Code/fraud-detection:/app"
    environment:
      FLASK_ENV: development
    depends_on:
      postgres:
        condition: service_healthy

  mlflow:
    image: mlflow/mlflow:latest
    container_name: mlflow_server
    ports:
      - "5001:5001"
    environment:
      MLFLOW_TRACKING_URI: "postgresql://admin:password@fraud_detection_db:5432/mlflow"
      BACKEND_STORE_URI: "postgresql://admin:password@fraud_detection_db:5432"
      ARTIFACT_ROOT: "/mlflow/artifacts"
    volumes:
      - mlflow_data:/mlflow/artifacts
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    name: fraud-detection_postgres_data
  mlflow_data:
    name: fraud-detection_mlflow_data

